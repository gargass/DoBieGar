{
    "contents" : "library(shiny)\nlibrary(survival)\nlibrary(survMisc, pos=10)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(reshape2)\nlibrary(ggplot2, pos=2)\n\nnowotwory <- list(\"GBMLGG\", \"BRCA\", \"KIPAN\", \"COADREAD\", \"STES\", \"GBM\", \"OV\",\n                  \"UCEC\", \"KIRC\", \"HNSC\", \"LUAD\", \"LGG\", \"LUSC\", \"THCA\")\n\nfor(nowotwor in nowotwory){\n  assign(paste('zbior.', nowotwor, sep=\"\"), read.table(paste('Zbiory/', nowotwor, '.txt', sep=\"\")))\n}\n\ngeny <- read.table('p_value/lista_interesujacych_genow.txt', h=T)\ngeny <- as.matrix(geny)\n\np_value_tabela <-read.table('p_value/p_value_NA.txt', h=T)\nczestosci<-read.table('czestosci.txt', h=T)\n\nfor(nowotwor in nowotwory){\n  assign(paste('p_value.', nowotwor, sep=\"\"), read.table(paste('p_value/P_value_dla_interesujacych_genow/', \n                                                               nowotwor, '_pvalue.txt', sep=\"\"), h=T))\n}\n\nfor(nowotwor in nowotwory){\n  assign(paste(nowotwor, '_variant', sep=\"\"), read.table(paste('Zbiory/', nowotwor, '_variant.txt', sep=\"\")))\n}\n\nnajczestsze <- read.table(\"najistotniejsze_geny.txt\", h=T)\n\nczestosci_variant <- read.table(\"czestosci_variant.txt\", h=T)\n\n\nshinyServer(function(input, output) {\n  \n  output$opis_krzywe <- renderText({\n    nowotwor <- input$nowotwory\n    gen <- input$geny\n\n    print('In the figures below we can see Kaplan-Meier curves for \n          a given gene and the given tumors. The survival curves \n          are estimated for the two groups of patients: \n          the first one refers to the patients with a mutation of a given gene \n          and the second one is the group of patients without any mutation \n          of this gene.')\n  })\n  \n\n  output$wykres <- renderPlot({\n    nowotwory <- input$nowotwory\n    gen <- input$geny\n  \n      \n      n <- length(nowotwory)\n     \n      p <- lapply(nowotwory, function(nowotwor){\n        \n        nowotwor_gen.fit <- survfit(Surv(time, status) ~ get(paste('zbior.', nowotwor, sep=\"\"))[,gen], \n                                    data=get(paste('zbior.', nowotwor, sep=\"\")))\n        survMisc::autoplot(nowotwor_gen.fit,\n                           xLab = paste('Time, P-value:', \n                                        get(paste('p_value.', nowotwor, sep=\"\"))$Pvalue[rownames(get(paste('p_value.', nowotwor, sep=\"\"))) == gen]), \n                           legLabs = c(\"status = 0\",\"status = 1\"),\n                           title=paste('Kaplanâ€“Meier estimator for ', gen, '\\n in ', nowotwor, \" cancer\", sep=\"\"))$plot\n      })\n\n      if(n <= 4){\n        ncol <- 2\n        nrow <- 2\n      }\n      else{\n        ncol <- ceiling(sqrt(n))\n        nrow <- ceiling(n/ceiling(sqrt(n)))\n      }\n      \n      marrangeGrob(p, ncol = ncol, nrow = nrow)\n      \n    }, height = 1000, width = 1000)\n  \n  output$opis_geny <- renderText({\n    \"The table shows the 10 most significant genes in which \n    a mutation occurred in cancer. \\n\"\n  })\n  \n  output$geny <- renderTable({\n    nowotwor <- input$nowotwory\n   \n      p <- matrix(1, nrow=10, ncol=1)\n      for (nowotworr in nowotwor)\n      {\n        p2 <- p_value_tabela[order(p_value_tabela[,nowotworr]), ][1:10, c(\"gen\", nowotworr)]\n        colnames(p2) <- c(paste(\"Marker \", nowotworr), paste(\"P-value \", nowotworr))\n        p <- cbind(p, p2)\n      }\n      p <- p[, -c(1)]\n      rownames(p) <- NULL\n      print(p)\n    }, digits = 5)\n  \n  output$opis_geny_wspol <- renderText({\n    \"The following table depicts three genes whose mutations appear most frequently with the mutation of a given gene in the given tumors.\"\n  })\n  \n  output$geny_wspolne<-renderTable({\n    p <- matrix(1, nrow=3, ncol=1)\n    gen <- input$geny\n    nowotwory <- input$nowotwory\n    for (nowotwor in nowotwory){\n      dane <- get(paste('zbior.', nowotwor, sep=\"\"))\n      z <- numeric((ncol(dane)-2))\n      for (i in 3:(ncol(dane)-2)){\n        z[i] <- sum(dane[which(dane[, gen]==1), i])\n        }\n      a <- sum(dane[which(dane[, gen]==1), gen])\n      x <- z[order(z)][(length(z)-1):(length(z)-3)]\n      x2 <- c(which(z==x[1]), which(z==x[2]),which(z==x[3]))\n      x2 <- x2[1:3]\n      \n      x3 <- as.matrix(colnames(dane)[c(x2)])\n      x4 <- as.matrix(round(z [ c(x2)]/a, 2))\n      colnames(x3) <- c(paste(\"Marker \", nowotwor))\n      colnames(x4) <- c(paste(\"Correlation \", nowotwor))\n      p <- cbind(p, x3, x4)\n      }\n    p <- p[, -c(1)]\n    rownames(p) <- NULL\n    print(p)\n    })\n  \n  output$heatmap_pvalue <- renderPlot({\n    melted_dane <- melt(p_value_tabela[which(p_value_tabela$gen %in% geny[1:length(geny)]), ])\n    \n    base_size <- 12\n    \n    ggplot(data = melted_dane, aes(x=variable, y=gen, fill=value)) + \n      geom_tile() + theme_grey(base_size = base_size) + labs(x = \"\",y = \"\") + \n      scale_x_discrete(expand = c(0, 0)) + \n      scale_y_discrete(expand = c(0, 0)) + theme(axis.ticks = element_blank(), \n                                                 axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = \"grey50\"))+\n      geom_tile(aes(fill = value), colour = \"white\")\n    \n  })\n  \n  output$heatmap_czestosc <- renderPlot({\n    melted_dane <- melt(czestosci[which(czestosci$gen %in% geny[1:length(geny)]), ])\n    \n    base_size <- 12\n    \n    \n    ggplot(data = melted_dane, aes(x=variable, y=gen, fill=value)) + \n      geom_tile() + theme_grey(base_size = base_size) + labs(x = \"\",y = \"\") + \n      scale_x_discrete(expand = c(0, 0)) + \n      scale_y_discrete(expand = c(0, 0)) + theme(axis.ticks = element_blank(), \n                                                 axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = \"grey50\"))+\n      geom_tile(aes(fill = value), colour = \"white\") + \n      scale_fill_gradient(low = \"white\", high = \"steelblue\")\n    \n  })\n  \n  output$boxplot_variant <- renderPlot({\n      nowotwory <- input$nowotwory\n      gen <- input$geny\n      \n      n <- length(nowotwory)\n      \n      nowotwory.gen.missense <- NULL\n      nowotwory.gen.nonsense <- NULL\n      \n      for(nowotwor in nowotwory){\n        nowotwor_variant <- get(paste(nowotwor, '_variant', sep=\"\"))\n        nowotwor_variant <- nowotwor_variant[, c(\"patient.barcode\", \"time\", \"status\", paste('Variant.', gen, sep=\"\"))]\n        nowotwor_variant$nowotwor <- nowotwor\n        colnames(nowotwor_variant) <- c(\"patient.barcode\", \"time\", \"status\", \"Variant\", \"nowotwor\")\n        nowotwory.gen.missense <- rbind(nowotwory.gen.missense, nowotwor_variant[!is.na(nowotwor_variant$Variant) & nowotwor_variant$Variant== \"Missense_Mutation\", ])\n        nowotwory.gen.nonsense <- rbind(nowotwory.gen.nonsense, nowotwor_variant[!is.na(nowotwor_variant$Variant) & nowotwor_variant$Variant == \"Nonsense_Mutation\", ])\n        \n      }\n      quantile <- stats::quantile\n      p <- lapply(c(\"Missense Mutation\", \"Nonsense Mutation\"), function(typ){\n      if(typ == \"Missense Mutation\"){\n        ggplot2::ggplot(nowotwory.gen.missense, aes(x=nowotwor, y=time)) + ggplot2::geom_boxplot() + ggtitle(\"Missense Mutation\") + theme(plot.title = element_text(lineheight=.8, face=\"bold\"))}\n      else{\n        ggplot2::ggplot(nowotwory.gen.nonsense, aes(x=nowotwor, y=time)) + ggplot2::geom_boxplot() + ggtitle(\"Nonsense Mutation\") + theme(plot.title = element_text(lineheight=.8, face=\"bold\"))}\n#       par(mfrow = c(1,2))\n#       boxplot(time ~ nowotwor, data = nowotwory.gen.missense, main = \"Missense Mutation\")\n#       boxplot(time ~ nowotwor, data = nowotwory.gen.nonsense, main = \"Nonsense Mutation\")\n             })\n      marrangeGrob(p, ncol=2, nrow=1)\n\n      \n  }, height = 400, width = 800)\n  \n  output$table_variant <- renderTable({\n    nowotwor <- input$nowotwory\n    gen <- input$geny\n    \n    p <- matrix(1, nrow=10, ncol=2)\n    for (nowotworr in nowotwor)\n    {\n      dane <- czestosci_variant[which(czestosci_variant$nowotwor==nowotworr), c(\"variant\", gen)]\n      colnames(dane) <- c(paste('variant ', nowotworr), paste(\"frequency in \", nowotworr))\n      p <- cbind(p, dane)\n    }\n    p <- p[, -c(1, 2)]\n    rownames(p) <- NULL\n    print(p)\n  }, digits=3)\n  \n  })",
    "created" : 1453247542843.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2498482422",
    "id" : "F818C1B5",
    "lastKnownWriteTime" : 1453313082,
    "path" : "~/Documents/WarsztatyBadawcze/DoBieGar/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}